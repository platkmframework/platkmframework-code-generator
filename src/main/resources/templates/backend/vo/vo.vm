/*******************************************************************************
 * Copyright(c) 2023 the original author Eduardo Iglesias Taylor.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	 https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 * 	Eduardo Iglesias Taylor - initial API and implementation
 *******************************************************************************/
 
 /*******************************************************************************
Code generated by platkmframework 
*******************************************************************************/
#set($pktype = $util.getPKJavaType($table))
#set($entityName = ${util.fixToEntityName($table.getName())})
#set($attributeName = ${util.fixToAttributeName($table.getName())}) 
#set($pkColumn = ${util.getPkColumn($table)}) 
package $voPackage;

import java.io.Serializable;

import javax.persistence.Table;

import org.platkmframework.annotation.Attribute;

@Table(name="$table.getName()") 
public class ${entityName}VO implements Serializable{

  private static final long serialVersionUID = 1L;

#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "")

#foreach($eColumn in $table.getColumn())
#set($pkColumnJavaType = $util.getColumnJavaType($eColumn))
#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "")
#set($colMIn       = "")
#set($colFormat= "")
#if($pkColumnJavaType == "java.lang.String")
#set($colLength    = ", precision=$eColumn.getPrecision()")
#elseif($pkColumn.getJavaSqlType() == "java.sql.Timestamp")
#set($colFormat= ", $dateTimeFormat")
#elseif($pkColumn.getJavaSqlType() == "java.sql.Time")
#set($colFormat= ", $timeFormat"))
#else
#set($colPrecision = ", precision=$eColumn.getPrecision()")
#set($colScale     = ", scale=$eColumn.getScale()") 
#end
  @Attribute(nullable=${eColumn.isNullable()}, column="$eColumn.getName()"${colFormat}${colLength}${colMIn}${colPrecision}${colScale} )
  private $pkColumnJavaType $util.fixToAttributeName($eColumn.getName());

#end

#foreach($fColumn in $table.getColumn())
#set($columnJavaType = $util.getColumnJavaType($fColumn))
  public $columnJavaType get${util.getAttributeForMethodName($fColumn.getName())}(){
    return this.$util.fixToAttributeName($fColumn.getName());
  }	

  public $util.fixToEntityName($table.getName())VO set${util.getAttributeForMethodName($fColumn.getName())} ($columnJavaType $util.fixToAttributeName($fColumn.getName())){
    this.$util.fixToAttributeName($fColumn.getName()) = $util.fixToAttributeName($fColumn.getName());
    return this;
  }
#end


}