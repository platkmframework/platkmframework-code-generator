/*******************************************************************************
 * Copyright(c) 2023 the original author Eduardo Iglesias Taylor.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	 https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 * 	Eduardo Iglesias Taylor - initial API and implementation
 *******************************************************************************/
 
/*******************************************************************************
Code generated by platkmframework 
*******************************************************************************/

#set($pktype = $util.getPKJavaType($table))
#set($entityName = ${util.fixToEntityName($table.getName())})
#set($attributeName = ${util.fixToAttributeName($table.getName())}) 
#set($pkColumn = ${util.getPkColumn($table)}) 
package ${controllerPackage};

import org.platkmframework.annotation.Api;
import org.platkmframework.annotation.AutoWired;
import org.platkmframework.annotation.ClassMethod;
import org.platkmframework.annotation.HttpRequestMethod;
import org.platkmframework.annotation.RequestBody;
import org.platkmframework.annotation.RequestParam;
import org.platkmframework.domain.base.dao.exception.DaoException;
import org.platkmframework.comon.service.exception.ServiceException;
import org.platkmframework.common.domain.filter.criteria.FilterCriteria;
import org.platkmframework.util.app.util.ui.JValue;
import org.platkmframework.common.domain.filter.FilterResult;
import org.platkmframework.annotation.OpenApi;

import ${servicePackage}.${entityName}Service;
import ${voPackage}.${entityName}VO; 

@OpenApi
@Api(path = "$entityName.toLowerCase()", description = "Gestor $entityName")
public class ${entityName}Controller {

	@AutoWired
	private ${entityName}Service ${attributeName}Service;
	
	
	@ClassMethod(name = "search", method=HttpRequestMethod.POST, description = "Buscar $entityName")
	public  FilterResult<${entityName}VO>  search(@RequestBody(required = true, description = "Criterios de b√∫squeda") FilterCriteria filter) throws ServiceException, DaoException {
		return ${attributeName}Service.search(filter);
	}

#if($util.isPkPresent($table))
#set($pkColumn = $util.getPkColumn($table))
#set($pkColumnName = $pkColumn.getName())
#set($pkAttributeName = ${util.fixToAttributeName($pkColumnName)}) 
#set($pkColumnJavaType = $util.getColumnJavaType($pkColumn))
	@ClassMethod(name = "load", method=HttpRequestMethod.GET, description = "Cargar $entityName")
	public ${entityName}VO  load(@RequestParam(required = true, name = "${pkAttributeName}") $pkColumnJavaType ${pkAttributeName}) throws ServiceException, DaoException {
		return ${attributeName}Service.crudLoad(${pkAttributeName});
	}
	
	@ClassMethod(name = "remove", method=HttpRequestMethod.PUT, description = "Eliminar $entityName")
	public void  remove(@RequestParam(required = true, name = "${pkAttributeName}") $pkColumnJavaType ${pkAttributeName}) throws ServiceException, DaoException {
		${attributeName}Service.removeById(${pkAttributeName});
	}	
	
#end
	@ClassMethod(name = "create", method=HttpRequestMethod.POST, description = "Create $entityName")
	public JValue<$pktype>  create(@RequestBody(required = true) ${entityName}VO ${attributeName}VO) throws ServiceException, DaoException {
       return new JValue<>(${attributeName}Service.crudCreate(${attributeName}VO));
    }

	@ClassMethod(name = "update", method=HttpRequestMethod.PUT, description = "Actualizar $entityName")
	public  void  update(@RequestBody(required = true) ${entityName}VO ${attributeName}VO) throws ServiceException, DaoException {
		${attributeName}Service.crudUpdate(${attributeName}VO);
	}
  
}
