/*******************************************************************************
 * Copyright(c) 2023 the original author Eduardo Iglesias Taylor.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	 https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 * 	Eduardo Iglesias Taylor - initial API and implementation
 *******************************************************************************/
 
/*******************************************************************************
Code generated by platkmframework 
*******************************************************************************/
 
package $entityPackage;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

#set($pktype = $util.getPKJavaType($table))
#set($pkColumnName = "")
@Entity
@Table(name="$table.getName()") 
public class $util.fixToEntityName($table.getName()) implements Serializable{

  private static final long serialVersionUID = 1L;

#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "") 
#if($util.isPkPresent($table))
#set($pkColumn = ${util.getPkColumn($table)}) 
#set($pkColumnName = $pkColumn.getName())
#set($pkColumnJavaType = $util.getColumnJavaType($pkColumn))
#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "")
#if($pkColumnJavaType == "java.lang.String")
#set($colLength    = ", length=$pkColumn.getPrecision()")
#elseif(($pkColumnJavaType != "java.sql.Timestamp") and ($pkColumnJavaType != "java.sql.Time")  and ($pkColumn.getJavaSqlType() != "java.util.Date") and ($pkColumn.getJavaSqlType() != "java.sql.Date"))
#set($colPrecision = ", precision=$pkColumn.getPrecision()")
#set($colScale     = ", scale=$pkColumn.getScale()") 
#end
  @Id
  @Column(name="${pkColumn.getName()}", nullable=${pkColumn.isNullable()}${colLength}${colPrecision}${colScale})
  private $pkColumnJavaType $util.fixToAttributeName($pkColumn.getName());
#end

#foreach($eColumn in $table.getColumn())
#if(!$pkColumnName.equals($eColumn.getName()))
#set($pkColumnJavaType = $util.getColumnJavaType($eColumn))
#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "")
#if($pkColumnJavaType == "java.lang.String")
#set($colLength    = ", length=$eColumn.getPrecision()")
#elseif(($pkColumn.getJavaSqlType() != "java.sql.Timestamp") and ($pkColumn.getJavaSqlType() != "java.sql.Time") and ($pkColumn.getJavaSqlType() != "java.util.Date") and ($pkColumn.getJavaSqlType() != "java.sql.Date"))
#set($colPrecision = ", precision=$eColumn.getPrecision()")
#set($colScale     = ", scale=$eColumn.getScale()") 
#end
#if($util.isFkColumn($table, $eColumn))
#set($fkColumnInfo = $util.getFkColumnInfo($table,$eColumn))
@javax.persistence.JoinColumn(table = "$fkColumnInfo.getPkTableName()", name="$fkColumnInfo.getPkColumnName()()")
#end
  @Column(name="$eColumn.getName()", nullable=${eColumn.isNullable()}${colLength}${colPrecision}${colScale})
  private $pkColumnJavaType $util.fixToAttributeName($eColumn.getName());
  
#end
#end

#foreach($fColumn in $table.getColumn())
#set($pkColumnJavaType = $util.getColumnJavaType($fColumn))
  public $pkColumnJavaType get${util.getAttributeForMethodName($fColumn.getName())}(){
    return this.$util.fixToAttributeName($fColumn.getName());
  }	

  public $util.fixToEntityName($table.getName()) set${util.getAttributeForMethodName($fColumn.getName())} ($pkColumnJavaType $util.fixToAttributeName($fColumn.getName())){
    this.$util.fixToAttributeName($fColumn.getName()) = $util.fixToAttributeName($fColumn.getName());
    return this;
  }
#end


}